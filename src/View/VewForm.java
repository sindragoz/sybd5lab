/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import control.AbstractService;
import control.BalanceChangeServ;
import control.BalanceServ;
import control.ChangeTypeServ;
import control.FamilyMemberServ;
import control.FamilyServ;
import entities.Balance;
import entities.BalanceChange;
import entities.ChangeType;
import entities.Family;
import entities.FamilyMember;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static javax.swing.text.StyleConstants.Family;
import manager.DbManager;
import tools.TableTool;

/**
 *
 * @author Sindragoz
 */
public class VewForm extends javax.swing.JFrame {
 AbstractService service = null;
 AbstractService service1 = null;
    private DefaultTableModel tableModel = new DefaultTableModel();
    private DbManager dbManager;
    /**
     * Creates new form BalanceVewForm
     */
    public VewForm() {
        initComponents();
        service=new BalanceServ();
    }
String []tbvals;
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbUpdate = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        cbDelete = new javax.swing.JComboBox<>();
        tbValues = new javax.swing.JTextField();
        btnInsert1 = new javax.swing.JButton();
        cbCols = new javax.swing.JComboBox<>();
        btnInsert2 = new javax.swing.JButton();
        cbFname = new javax.swing.JComboBox<>();
        cbAmount = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        cbUpdate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        cbDelete.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tbValues.setText("jTextField1");

        btnInsert1.setText("Ok");
        btnInsert1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsert1ActionPerformed(evt);
            }
        });

        cbCols.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbCols.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbColsActionPerformed(evt);
            }
        });

        btnInsert2.setText("Show");
        btnInsert2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsert2ActionPerformed(evt);
            }
        });

        cbFname.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbFname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFnameActionPerformed(evt);
            }
        });

        cbAmount.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAmountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 821, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInsert, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(32, 32, 32)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(tbValues)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(cbCols, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(cbAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(cbFname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInsert2)
                            .addGap(18, 18, 18)
                            .addComponent(btnInsert1))))
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbDelete, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(btnUpdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnInsert, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                    .addComponent(cbUpdate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(tbValues, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnInsert1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(cbCols)
                                .addComponent(btnInsert2, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbFname)
                    .addComponent(cbAmount))
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
public void setService(AbstractService service){
        this.service = service;
    }
    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        try {
        //    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
        if (service instanceof BalanceChangeServ){
            BalanceChange entity = new BalanceChange();  
           // entity.setF_id(Long.parseLong("1"));
            entity.setF_id(Long.parseLong(cbFname.getItemAt(cbFname.getSelectedIndex()).split(" ")[0]));
            entity.setAmount(Integer.parseInt(tbvals[0]));
            entity.setReason(tbvals[2]);
            // SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
           //  java.util.Date dt = format.parse(insert[3]);
            entity.setDate(tbvals[1]);
             service.add(entity);
        }
         if (service instanceof BalanceServ){
           
            Balance entity = new Balance();
 entity.setF_id(Long.parseLong(cbFname.getItemAt(cbFname.getSelectedIndex()).split(" ")[0]));
          //  java.util.Date dat_utl = format.parse(values[2]);
            entity.setDate(tbvals[1]);
         //   entity.setDate(new java.sql.Date(dat_utl.getTime()));

            entity.setAmount(Integer.parseInt(tbvals[0]));
         //   entity.setF_id(Long.parseLong(tbvals[0]));
             service.add(entity);
         }
         if(service instanceof ChangeTypeServ){
         ChangeType entity = new ChangeType();  
         //   entity.setBc_id(Long.parseLong(tbvals[1]));
             entity.setBc_id(Long.parseLong(cbAmount.getItemAt(cbAmount.getSelectedIndex()).split(" ")[0]));
            if(Integer.parseInt(tbvals[0])>0)
            entity.setType(1);
            else
                entity.setType(-1);
            service.add(entity);
         }
          if(service instanceof FamilyMemberServ){
           FamilyMember entity = new FamilyMember();  
          //  entity.setF_id(Long.parseLong(tbvals[0]));
           entity.setF_id(Long.parseLong(cbFname.getItemAt(cbFname.getSelectedIndex()).split(" ")[0]));
            entity.setSec_name(tbvals[1]);
            entity.setName(tbvals[2]);
            entity.setPatroname(tbvals[3]);
            entity.setStatus(tbvals[4]);
            service.add(entity);
          }
           if(service instanceof FamilyServ){
                Family entity = new Family();  
                entity.setMembercnt(Short.parseShort(tbvals[1]));
                entity.setName(tbvals[0]);
                service.add(entity);
           }
         
           
         
          PrintData();  
           FillCb();
        } catch (Exception ex) {
           PrintData();
            FillCb();
           if (!ex.getMessage().equals("Запрос не вернул результатов."))JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnInsertActionPerformed
  private void PrintData(){
        try {
            jTable1.setModel(tableModel);
            TableTool.FillTable(tableModel, service.all());
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane,ex.getMessage());
        }
    }
    
    private void FillCb(){
        try {
            cbUpdate.removeAllItems();
            cbDelete.removeAllItems();
            cbCols.removeAllItems();
           cbFname.removeAllItems();
           cbAmount.removeAllItems();
          
           cbAmount.setVisible(false);
            if(service instanceof BalanceServ){
          List <Balance> entitiesB = service.all();
         
          //  cbCols.addItem("fname");
                cbCols.addItem("amount");
                cbCols.addItem("date");
            for(Balance e : entitiesB){
                cbUpdate.addItem(e+"");
                cbDelete.addItem(e+"");
                
            }
           
            }
            if(service instanceof BalanceChangeServ){
          List <BalanceChange> entitiesBc = service.all();
               // cbCols.addItem("fname");
                cbCols.addItem("amount");
                cbCols.addItem("date");
                cbCols.addItem("reason");
                 
            for(BalanceChange e : entitiesBc){
                cbUpdate.addItem(e+"");
                cbDelete.addItem(e+"");
            }
            }
            if(service instanceof ChangeTypeServ){
          List <ChangeType> entities = service.all();
            cbCols.addItem("type");
            cbAmount.setVisible(true);
          //      cbCols.addItem("change_amount");
            for(ChangeType e : entities){
                cbUpdate.addItem(e+"");
                cbDelete.addItem(e+"");
                 cbFname.setVisible(false);
            }
            }
            if(service instanceof FamilyMemberServ){
          List <FamilyMember> entities = service.all();
       //     cbCols.addItem("fname");
                cbCols.addItem("second name");
                cbCols.addItem("name");
                cbCols.addItem("patroname");
                cbCols.addItem("status");
            for(FamilyMember e : entities){
                cbUpdate.addItem(e+"");
                cbDelete.addItem(e+"");
            }
            }
            if(service instanceof FamilyServ){
          List <Family> entities = service.all();
             cbCols.addItem("fname");
                cbCols.addItem("memberscnt");
            for(Family e : entities){
                cbUpdate.addItem(e+"");
                cbDelete.addItem(e+"");
            }
             cbFname.setVisible(false);
            }
            service1=new FamilyServ(dbManager);
           List <Family> entitiesF;
            try {
                entitiesF = service1.all();
                for(Family e : entitiesF)
                cbFname.addItem(e+"");
            } catch (SQLException ex) {
                Logger.getLogger(VewForm.class.getName()).log(Level.SEVERE, null, ex);
            }
             
                service1=new BalanceChangeServ(dbManager);
                try {
                    List <BalanceChange> entitiesCT = service1.all();
                    for(BalanceChange e : entitiesCT)
                cbAmount.addItem(e+"");
                } catch (SQLException ex) {
                    Logger.getLogger(VewForm.class.getName()).log(Level.SEVERE, null, ex);
                }
             
            
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
          
        }
    }

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
 try { 
     if(service instanceof FamilyServ){
           Family  entity = new Family();
           entity.setId(Long.parseLong(cbDelete.getItemAt(cbDelete.getSelectedIndex()).split(" ")[0]));
           service.delete(entity);
     }
     if(service instanceof BalanceServ){
        Balance entity = new Balance();
        entity.setId(Long.parseLong(cbDelete.getItemAt(cbDelete.getSelectedIndex()).split(" ")[0]));
        service.delete(entity);
     }
      if(service instanceof BalanceChangeServ){
        BalanceChange entity = new BalanceChange();
        entity.setId(Long.parseLong(cbDelete.getItemAt(cbDelete.getSelectedIndex()).split(" ")[0]));
        service.delete(entity);
      }
       if(service instanceof ChangeTypeServ){
        ChangeType entity = new ChangeType();
        entity.setId(Long.parseLong(cbDelete.getItemAt(cbDelete.getSelectedIndex()).split(" ")[0]));
        service.delete(entity);
       }
        if(service instanceof FamilyMemberServ){
        FamilyMember entity = new FamilyMember();
            entity.setId(Long.parseLong(cbDelete.getItemAt(cbDelete.getSelectedIndex()).split(" ")[0]));
            service.delete(entity);
        }
            FillCb();
            PrintData();
       } catch (Exception ex) {
           PrintData();
            FillCb();
           if (!ex.getMessage().equals("Запрос не вернул результатов."))JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
      try{ 
     
        if (service instanceof BalanceChangeServ){
            
            BalanceChange entity = new BalanceChange();  
            entity.setId(Long.parseLong(cbUpdate.getItemAt(cbUpdate.getSelectedIndex()).split(" ")[0]));
            
             entity.setF_id(Long.parseLong(tbvals[0]));
            entity.setAmount(Integer.parseInt(tbvals[1]));
            entity.setReason(tbvals[3]);
            // SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
           //  java.util.Date dt = format.parse(insert[3]);
            entity.setDate(tbvals[2]);
         //    SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd");
            // java.util.Date dt = format.parse(insert[3]
             service.update(entity);
        }
         if (service instanceof BalanceServ){
           
            Balance entity = new Balance();
entity.setId(Long.parseLong(cbUpdate.getItemAt(cbUpdate.getSelectedIndex()).split(" ")[0]));
          //  java.util.Date dat_utl = format.parse(values[2]);
           entity.setDate(tbvals[2]);
         //   entity.setDate(new java.sql.Date(dat_utl.getTime()));

            entity.setAmount(Integer.parseInt(tbvals[1]));
            entity.setF_id(Long.parseLong(tbvals[0]));
             service.update(entity);
         }
         if(service instanceof ChangeTypeServ){
         ChangeType entity = new ChangeType();  
         entity.setId(Long.parseLong(cbUpdate.getItemAt(cbUpdate.getSelectedIndex()).split(" ")[0]));
            entity.setBc_id(Long.parseLong(tbvals[1]));
            if(Integer.parseInt(tbvals[0])>0)
            entity.setType(1);
            else
                entity.setType(-1);
            service.update(entity);
         }
          if(service instanceof FamilyMemberServ){
           FamilyMember entity = new FamilyMember();  
        entity.setId(Long.parseLong(cbUpdate.getItemAt(cbUpdate.getSelectedIndex()).split(" ")[0]));
          entity.setF_id(Long.parseLong(tbvals[0]));
            entity.setSec_name(tbvals[1]);
            entity.setName(tbvals[2]);
            entity.setPatroname(tbvals[3]);
            entity.setStatus(tbvals[4]);
            service.update(entity);
          }
           if(service instanceof FamilyServ){
                Family entity = new Family();  
                entity.setId(Long.parseLong(cbUpdate.getItemAt(cbUpdate.getSelectedIndex()).split(" ")[0]));
                entity.setMembercnt(Short.parseShort(tbvals[1]));
                entity.setName(tbvals[0]);
                service.update(entity);
           }
           PrintData();
           } catch (Exception ex) {
           PrintData();
            FillCb();
           if (!ex.getMessage().equals("Запрос не вернул результатов."))JOptionPane.showMessageDialog(rootPane, ex.getMessage());
        }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
        PrintData();
        FillCb();
        tbvals=new String[cbCols.getItemCount()];
        for(int i=0;i<cbCols.getItemCount();i++){
            tbvals[i]="";
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnInsert1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsert1ActionPerformed
        // TODO add your handling code here:
        tbvals[cbCols.getSelectedIndex()]=tbValues.getText();
    }//GEN-LAST:event_btnInsert1ActionPerformed

    private void btnInsert2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsert2ActionPerformed
if(service instanceof FamilyServ){} else {
     }
tbValues.setText(tbvals[cbCols.getSelectedIndex()]);        // TODO add your handling code here:
    }//GEN-LAST:event_btnInsert2ActionPerformed

    private void cbColsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbColsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbColsActionPerformed

    private void cbFnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFnameActionPerformed

    private void cbAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAmountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VewForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VewForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnInsert1;
    private javax.swing.JButton btnInsert2;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbAmount;
    private javax.swing.JComboBox<String> cbCols;
    private javax.swing.JComboBox<String> cbDelete;
    private javax.swing.JComboBox<String> cbFname;
    private javax.swing.JComboBox<String> cbUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField tbValues;
    // End of variables declaration//GEN-END:variables

    void setManager(DbManager dbManager) {
        this.dbManager=dbManager; //To change body of generated methods, choose Tools | Templates.
    }
}
