/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import containers.ConnectionContainer;
import control.BalanceChangeServ;
import control.BalanceServ;
import control.ChangeTypeServ;
import control.FamilyMemberServ;
import control.FamilyServ;
import entities.BalanceChange;
import entities.ChangeType;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import manager.DbManager;
import models.MainFormViewModel;

/**
 *
 * @author Regener
 */
public class MainForm extends javax.swing.JFrame {
    
    private DefaultTableModel tableModel = new DefaultTableModel();
    
    private MainFormViewModel model = new MainFormViewModel();

    private ConnectionContainer connCt= new  ConnectionContainer("jdbc:postgresql://127.0.0.1:5432/fbudget",
                                                    "postgres",
                                                    "1");   
    private DbManager dbManager = new DbManager();
    private List<BalanceChange> BalanceChangeList = null;
    private List<ChangeType> ChangeTypeList = null;
    /**
     * Creates new form MainJFrame
     */
    public MainForm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStatus = new javax.swing.JLabel();
        btnExecuteQ = new javax.swing.JButton();
        cbNumOfQ = new javax.swing.JComboBox<>();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnReload = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        mItemNewConnection = new javax.swing.JMenuItem();
        mItemDisconnect = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mBalance = new javax.swing.JMenuItem();
        mBalancechanges = new javax.swing.JMenuItem();
        mChangetype = new javax.swing.JMenuItem();
        mFamilyMembers = new javax.swing.JMenuItem();
        mFamily = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        btnExecuteQ.setText("Execute query");
        btnExecuteQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteQActionPerformed(evt);
            }
        });

        cbNumOfQ.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbNumOfQ.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbNumOfQItemStateChanged(evt);
            }
        });
        cbNumOfQ.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbNumOfQMouseClicked(evt);
            }
        });
        cbNumOfQ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbNumOfQActionPerformed(evt);
            }
        });

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnReload.setText("Reload");
        btnReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel3.setText("Status");

        jMenu1.setLabel("Connection");
        jMenu1.setName(""); // NOI18N

        mItemNewConnection.setText("Reconnect");
        mItemNewConnection.setName(""); // NOI18N
        mItemNewConnection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemNewConnectionActionPerformed(evt);
            }
        });
        jMenu1.add(mItemNewConnection);

        mItemDisconnect.setText("Disconnect");
        mItemDisconnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mItemDisconnectActionPerformed(evt);
            }
        });
        jMenu1.add(mItemDisconnect);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Tables");

        mBalance.setText("Balance");
        mBalance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBalanceActionPerformed(evt);
            }
        });
        jMenu2.add(mBalance);

        mBalancechanges.setText("Balance Changes");
        mBalancechanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBalancechangesActionPerformed(evt);
            }
        });
        jMenu2.add(mBalancechanges);

        mChangetype.setText("Change type");
        mChangetype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mChangetypeActionPerformed(evt);
            }
        });
        jMenu2.add(mChangetype);

        mFamilyMembers.setText("Family Members");
        mFamilyMembers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mFamilyMembersActionPerformed(evt);
            }
        });
        jMenu2.add(mFamilyMembers);

        mFamily.setText("Family");
        mFamily.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mFamilyActionPerformed(evt);
            }
        });
        jMenu2.add(mFamily);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 873, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cbNumOfQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnExecuteQ, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnInsert)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnReload))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 291, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReload)
                    .addComponent(btnInsert)
                    .addComponent(btnDelete)
                    .addComponent(btnUpdate)
                    .addComponent(btnExecuteQ))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbNumOfQ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(lblStatus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblStatus.getAccessibleContext().setAccessibleName("lblStatus");

        pack();
    }// </editor-fold>//GEN-END:initComponents
                             
    private void mItemNewConnectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemNewConnectionActionPerformed
        openConnectionFrame();
        dbManager.setConnectionContainer(connCt);
        dbManager.closeConnection();
        if(dbManager.openConnection()){
            lblStatus.setText("Connected");
        }
        else{
            lblStatus.setText("connection error");
        }
    }//GEN-LAST:event_mItemNewConnectionActionPerformed

    private void mItemDisconnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mItemDisconnectActionPerformed
        if(dbManager.closeConnection()){
            lblStatus.setText("Connection closed");
        }
    }//GEN-LAST:event_mItemDisconnectActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        openConnectionFrame();
        dbManager.setConnectionContainer(connCt);
        if(dbManager.openConnection()){
            lblStatus.setText("Active");
            model.setDbManager(dbManager);
        }
        else{
            lblStatus.setText("Disconnected");
        }
        
        jTable1.setModel(tableModel);
        
        cbNumOfQ.removeAllItems();
        for(int i = 1; i < 4; i++){
            cbNumOfQ.addItem(i+"");
        }
        
        updateInfo();
    }//GEN-LAST:event_formWindowOpened

    private void updateInfo(){
        try {
            BalanceChangeList = model.getBcs();
            ChangeTypeList = model.getCts(); 
            tableModel.setRowCount(0);
            tableModel.setColumnCount(0);
            tableModel.addColumn("bc_id");
          //  tableModel.addColumn("ct_id");
            tableModel.addColumn("type");
            tableModel.addColumn("amount");
            tableModel.addColumn("reason");
            tableModel.addColumn("date");
            
            
            for(BalanceChange e : BalanceChangeList){
                tableModel.addRow(new String[]{e.getId()+"",getType(e.getId()),e.getAmount()+"",e.getReason()
                        ,e.getDate()+""});
                //insert into changetype values(nextval('ct_seq'),8,-1);
             // insert into balancechange values(nextval('bc_seq'),1,'buying food',390,'2017-01-05');

//insert into balancechange values(nextval('bc_seq'),1,'buying TV',18000,'2017-02-17');

//insert into balancechange values(nextval('bc_seq'),1,'cell bike',10050,'2017-06-29');

//insert into balancechange values(nextval('bc_seq'),1,'get salary',30800,'2017-06-30');
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }
    
    private String getType(long id){
        for(ChangeType e : ChangeTypeList){
            if(e.getBc_id() == id){
                return ""+e.getType();
            }
        }
        return "";
    }
     private long getctId(long id){
        for(ChangeType e : ChangeTypeList){
            if(e.getBc_id() == id){
                return +e.getId();
            }
        }
        return id;
    }
    
    

    VewForm F;
    private void mBalancechangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBalancechangesActionPerformed
         VewForm F = new VewForm();
        F.setService(new BalanceChangeServ(dbManager));
        F.setManager(dbManager);
        F.setVisible(true);
        F.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_mBalancechangesActionPerformed

    private void mChangetypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mChangetypeActionPerformed
        F = new VewForm();
        F.setService(new ChangeTypeServ(dbManager));
        F.setManager(dbManager);
        F.setVisible(true);
        F.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_mChangetypeActionPerformed

    private void mFamilyMembersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mFamilyMembersActionPerformed
        F = new VewForm();
        F.setService(new FamilyMemberServ(dbManager));
        F.setManager(dbManager);
        F.setVisible(true);
        F.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_mFamilyMembersActionPerformed

    private void mFamilyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mFamilyActionPerformed
       F = new VewForm();
        F.setService(new FamilyServ(dbManager));
        F.setManager(dbManager);
        F.setVisible(true);
        F.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_mFamilyActionPerformed

    private void mBalanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBalanceActionPerformed
       F = new VewForm();
        F.setService(new BalanceServ(dbManager));
        F.setManager(dbManager);
        F.setVisible(true);
        F.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_mBalanceActionPerformed

    private void btnExecuteQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteQActionPerformed
        ViewQueryResultsForm qF = new ViewQueryResultsForm();
        qF.setDbManager(dbManager);
        qF.setId_query(cbNumOfQ.getSelectedIndex());
        qF.setVisible(true);
        qF.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnExecuteQActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        MainDialog ami = new MainDialog();
        ami.setOnInsert(true);
        ami.setDbManager(dbManager);
        ami.setVisible(true);
        ami.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        MainDialog ami = new MainDialog();
        ami.setOnInsert(false);
        ami.setDbManager(dbManager);
     //   ami.setId(assessments.get(jTable1.getSelectedRow()).getId());
        ami.setVisible(true);
        ami.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
     try {
            model.deletect(ChangeTypeList.get(jTable1.getSelectedRow()));
            
       } catch (Exception ex) {
          //  Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
     try {  
            model.deletebc(BalanceChangeList.get(jTable1.getSelectedRow()));
        } catch (Exception ex) {
            Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        updateInfo();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadActionPerformed
        updateInfo();
    }//GEN-LAST:event_btnReloadActionPerformed

    private void cbNumOfQActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbNumOfQActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbNumOfQActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked

  //      jLabel2.setText(ChangeTypeList.get(jTable1.getSelectedRow()).getId()+" "+ChangeTypeList.get(jTable1.getSelectedRow()).getBc_id()+" ");  
   // jLabel2.setText(jLabel2.getText()+" "+BalanceChangeList.get(jTable1.getSelectedRow()).getId());    
// TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void cbNumOfQItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbNumOfQItemStateChanged

    }//GEN-LAST:event_cbNumOfQItemStateChanged

    private void cbNumOfQMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbNumOfQMouseClicked

         // TODO add your handling code here:
    }//GEN-LAST:event_cbNumOfQMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }
    
    private void openConnectionFrame(){
        ConnectForm cf = new ConnectForm((Frame)this.getOwner(), true);
        cf.setFields(connCt);
        cf.setVisible(true);
        connCt = cf.getFields();
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExecuteQ;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnReload;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbNumOfQ;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JMenuItem mBalance;
    private javax.swing.JMenuItem mBalancechanges;
    private javax.swing.JMenuItem mChangetype;
    private javax.swing.JMenuItem mFamily;
    private javax.swing.JMenuItem mFamilyMembers;
    private javax.swing.JMenuItem mItemDisconnect;
    private javax.swing.JMenuItem mItemNewConnection;
    // End of variables declaration//GEN-END:variables
}
